package com.cn;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.catalina.Session;

import com.sun.corba.se.spi.orbutil.fsm.Guard.Result;
import com.sun.corba.se.spi.orbutil.fsm.Input;

import StudentManagementSystem.com.cn.student.dao.Student;
import StudentManagementSystem.com.cn.student.servise.IStudentServise;
import StudentManagementSystem.com.cn.student.servise.StudentServiseImpl;

public class StudentServlet extends BaseServlet{
	private IStudentServise studentServise = new StudentServiseImpl();
	int pageIndex = 1;
	int pageSize = 6;
	
	@Override
	public void init() throws ServletException {
		
		super.init();
		
	}
	

	private void login(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {
		ServletContext servletContext = getServletContext();
		HttpSession session = req.getSession(true);
		String userName = req.getParameter("userName");
		String password = req.getParameter("password");
		if ("gaokuo".equals(userName) && "123".equals(password)) {
			session.setAttribute("userName", "gaokuo");
			session.setAttribute("password", "123");
			resp.sendRedirect(servletContext.getContextPath()+"/student?method=findAllStudents");
		}else{
			req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
		}
	}

	private void modifyStudentInfo(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		HttpSession session = req.getSession(false);
		if (session.getAttribute("userName") == null) {
			try {
				req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			};
		}
		ServletContext servletContext = getServletContext();
		int ID = Integer.parseInt(req.getParameter("id"));
		String name = req.getParameter("name");
		String age = req.getParameter("age");
		String gender = req.getParameter("gender");
		String birthday = req.getParameter("birthday");
		Date date = new Date();
		String  regex = "[0-9]{4}+[-]+[0-9]{2}+[-]+[0-9]{2}";
		
		
		if (birthday.matches(regex)) {
			SimpleDateFormat simpleDateFormat =new SimpleDateFormat("yyyy-MM-dd");
			try {
				date = simpleDateFormat.parse(birthday);
			} catch (ParseException e) {
				e.printStackTrace();
			}
		}

		Student student = new Student(ID, name, Integer.parseInt(age), gender, date);
		studentServise.modifyStudentInfo(student, 123);
		resp.sendRedirect(servletContext.getContextPath()+"/student?method=findStudentsPage");
	}

	private void addStudent(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		if (session.getAttribute("userName") == null) {
			try {
				req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			};
		}
		
		ServletContext servletContext = getServletContext();
		
		String name = req.getParameter("name");
		String age = req.getParameter("age");
		String gender = req.getParameter("gender");
		String birthday = req.getParameter("birthday");
		
		String  regexAge = "\\d{0,2}";

		if ("".equals(name) || "".equals(age) || "".equals(gender) || 
				name == null || age == null || gender == null || 
				!age.matches(regexAge)){
				resp.sendRedirect(servletContext.getContextPath()+"/student?method=fuzzyQuery");
		}else{
			Date date = new Date();
			String  regex = "[0-9]{4}+[-]+[0-9]{2}+[-]+[0-9]{2}";
			if (birthday.matches(regex)) {
				SimpleDateFormat simpleDateFormat =new SimpleDateFormat("yyyy-MM-dd");
				try {
					date = simpleDateFormat.parse(birthday);
				} catch (ParseException e) {
					e.printStackTrace();
				}
			}
			Student student = new Student(name, Integer.parseInt(age), gender, date);
			studentServise.addStudent(student, 123);
			
			resp.sendRedirect(servletContext.getContextPath()+"/student?method=findStudentsPage");
		}
	
	}
	
	
	private void deleteStudent(HttpServletRequest req, HttpServletResponse resp){
		if (session.getAttribute("userName") == null) {
			try {
				req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			};
		}
		
		ServletContext servletContext = getServletContext();
		
		String id = req.getParameter("id");
		studentServise.deleteStudent(Integer.parseInt(id), 123);
		try {
			resp.sendRedirect(servletContext.getContextPath()+"/student?method=findStudentsPage");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void criteriaQueries(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		if (session.getAttribute("userName") == null) {
			try {
				req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			};
		}
		
		String pageIndexStr = (String) req.getParameter("pageIndex");
		String pageSizeStr = (String) req.getParameter("pageSize");
		
		if (pageIndexStr != null && !"".equals(pageIndexStr)) {
			pageIndex = Integer.parseInt(pageIndexStr);
		}

		if (pageSizeStr != null && !"".equals(pageSizeStr)) {
			pageSize = Integer.parseInt(pageSizeStr);
		}
		int totalStudents = studentServise.quaryStudents(123).size();
		int totalPage = (int)Math.ceil(1.0*totalStudents/pageSize);
		
		PageBean pageBeanStart = new PageBean(pageIndex, pageSize, totalStudents, totalPage);
		List<Student> thePageList = studentServise.thePageList(pageBeanStart);
		
		ServletContext servletContext = getServletContext();
		HttpSession session = req.getSession(true);
		String name = (String) session.getAttribute("userName");
		String studentName = req.getParameter("name");
		int studentAge;
		if (req.getParameter("age") == null || "".equals(req.getParameter("age"))) {
			studentAge = 0;
		}else {
			studentAge = Integer.parseInt(req.getParameter("age"));
		}
		
		String studentGender = req.getParameter("gender");
		Student student = new Student(studentName, studentAge, studentGender, new Date());
		if (studentServise.criteriaQueries(student, pageBeanStart).size() == 0) {
			resp.sendRedirect(servletContext.getContextPath()+"/student?method=findAllStudents");
		}else{
			try {
				List<Student> list = studentServise.criteriaQueries(student,pageBeanStart);
				PageBean pageBean = new PageBean(pageIndex, pageSize, totalStudents, totalPage,list);
				req.setAttribute("pageBean", pageBean);
				req.setAttribute("queryStudentsList", list);
				req.setAttribute("userName", name);
				req.getRequestDispatcher("/jsp/FindStudentsPage.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			}
		}
	
		}
	
	private void findStudentsPage(HttpServletRequest req, HttpServletResponse resp) throws IOException {
		if (session.getAttribute("userName") == null) {
			try {
				req.getRequestDispatcher("/jsp/login.jsp").forward(req, resp);
			} catch (ServletException e) {
				e.printStackTrace();
			};
		}
		
		String pageIndexStr = (String) req.getParameter("pageIndex");
		String pageSizeStr = (String) req.getParameter("pageSize");
		
		if (pageIndexStr != null && !"".equals(pageIndexStr)) {
			pageIndex = Integer.parseInt(pageIndexStr);
		}

		if (pageSizeStr != null && !"".equals(pageSizeStr)) {
			pageSize = Integer.parseInt(pageSizeStr);
		}
		int totalStudents = studentServise.quaryStudents(123).size();
		int totalPage = (int)Math.ceil(1.0*totalStudents/pageSize);
		
		PageBean pageBeanStart = new PageBean(pageIndex, pageSize, totalStudents, totalPage);
		List<Student> thePageList = studentServise.thePageList(pageBeanStart);
		PageBean pageBean = new PageBean(pageIndex, pageSize, totalStudents, totalPage,thePageList);
		req.setAttribute("pageBean", pageBean);
		try {
			req.getRequestDispatcher("/jsp/FindStudentsPage.jsp").forward(req, resp);
		} catch (ServletException e) {
			e.printStackTrace();
		}
	}
}
